<launch>
	<include file="$(find kobuki_node)/launch/robot_with_tf.launch" />

	<node name="laser_node" pkg="urg_node" type="urg_node" respawn="true">
		<param name="ip_address" value="192.168.0.10" />

		<remap from="scan" to="scan_hokuyo" />
	</node>

	<group ns="camera">
		<include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
			<arg name="depth_width"       value="480"/>
			<arg name="depth_height"      value="270"/>
			<arg name="depth_fps"         value="15"/>
			<arg name="color_width"       value="424"/>
			<arg name="color_height"      value="240"/>
			<arg name="color_fps"         value="15"/>
			<arg name="enable_depth"      value="true"/>
			<arg name="enable_color"      value="true"/>
			<arg name="enable_infra1"     value="false"/>
			<arg name="enable_infra2"     value="false"/>
			<arg name="enable_fisheye"    value="false"/>
			<arg name="enable_imu"        value="false"/>
			<arg name="enable_pointcloud" value="true"/>
			<arg name="enable_sync"       value="true"/>
		</include>
	</group>

	<node name="pointcloud_to_laserscan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node">
		<param name="min_height" value="-0.3" />
		<param name="max_height" value="0.025" />
		<param name="angle_min" value="-0.7854" />
		<param name="angle_max" value="0.7854" />
		<param name="angle_increment" value="0.004363323" />
		<param name="scan_time" value="0.033" />
		<param name="range_min" value="0.25" />
		<param name="range_max" value="6" />
		<param name="concurrency_level" value="4" />
		<param name="target_frame" value="camera_link" />

		<remap from="cloud_in" to="camera/depth/color/points" />
		<remap from="scan" to="scan_realsense" />
	</node>

	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
		<!-- Frame names -->
		<param name="map_frame" value="map" />
		<param name="base_frame" value="base_footprint" />
		<param name="odom_frame" value="odom" />
    
		<!-- Tf use -->
		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="pub_map_odom_transform" value="true"/>
    
		<!-- Map size / start point -->
		<param name="map_resolution" value="0.02"/>
		<param name="map_size" value="2048"/>
		<param name="map_start_x" value="0.5"/>
		<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="3" />
    
		<!-- Map update parameters -->
		<param name="update_factor_free" value="0.4"/>
		<param name="update_factor_occupied" value="0.7" />    
		<param name="map_update_distance_thresh" value="0.4"/>
		<param name="map_update_angle_thresh" value="0.6" />
		<param name="laser_z_min_value" value = "-0.5" />
		<param name="laser_z_max_value" value = "0.5" />
    
		<!-- Advertising config --> 
		<param name="advertise_map_service" value="true"/>
    
		<param name="scan_subscriber_queue_size" value="5"/>
		<param name="scan_topic" value="scan_hokuyo"/>
		
		<param name="tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame" />
	</node>

	<node name="link_hokuyo" pkg="tf2_ros" type="static_transform_publisher"  args="0 0 0.24  0 0 0 base_link laser" />
	<node name="link_realsense" pkg="tf2_ros" type="static_transform_publisher"  args="-0.04 0 0.3  0 0 0 base_link camera_link" />

	<node name="scan_fusion" pkg="roblearn_scan_fusion" type="scan_fusion_node.py" />

	<node name="nn_interface_node" pkg="roblearn_nn_interface" type="nn_interface_node.py" respawn="true" />
</launch>
